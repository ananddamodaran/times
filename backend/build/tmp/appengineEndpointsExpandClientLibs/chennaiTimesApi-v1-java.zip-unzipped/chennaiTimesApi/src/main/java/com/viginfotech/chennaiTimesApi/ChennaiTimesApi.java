/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-02-15 17:18:02 UTC)
 * on 2017-05-07 at 08:58:36 UTC 
 * Modify at your own risk.
 */

package com.viginfotech.chennaiTimesApi;

/**
 * Service definition for ChennaiTimesApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ChennaiTimesApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ChennaiTimesApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the chennaiTimesApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "chennaiTimesApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ChennaiTimesApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ChennaiTimesApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the MessagingEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ChennaiTimesApi chennaiTimesApi = new ChennaiTimesApi(...);}
   *   {@code ChennaiTimesApi.MessagingEndpoint.List request = chennaiTimesApi.messagingEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public MessagingEndpoint messagingEndpoint() {
    return new MessagingEndpoint();
  }

  /**
   * The "messagingEndpoint" collection of methods.
   */
  public class MessagingEndpoint {

    /**
     * Create a request for the method "messagingEndpoint.sendMessage".
     *
     * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link SendMessage#execute()} method to invoke the remote
     * operation.
     *
     * @param message
     * @return the request
     */
    public SendMessage sendMessage(java.lang.String message) throws java.io.IOException {
      SendMessage result = new SendMessage(message);
      initialize(result);
      return result;
    }

    public class SendMessage extends ChennaiTimesApiRequest<Void> {

      private static final String REST_PATH = "sendMessage/{message}";

      /**
       * Create a request for the method "messagingEndpoint.sendMessage".
       *
       * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
       * optional parameters, call the {@link SendMessage#execute()} method to invoke the remote
       * operation. <p> {@link
       * SendMessage#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param message
       * @since 1.13
       */
      protected SendMessage(java.lang.String message) {
        super(ChennaiTimesApi.this, "POST", REST_PATH, null, Void.class);
        this.message = com.google.api.client.util.Preconditions.checkNotNull(message, "Required parameter message must be specified.");
      }

      @Override
      public SendMessage setAlt(java.lang.String alt) {
        return (SendMessage) super.setAlt(alt);
      }

      @Override
      public SendMessage setFields(java.lang.String fields) {
        return (SendMessage) super.setFields(fields);
      }

      @Override
      public SendMessage setKey(java.lang.String key) {
        return (SendMessage) super.setKey(key);
      }

      @Override
      public SendMessage setOauthToken(java.lang.String oauthToken) {
        return (SendMessage) super.setOauthToken(oauthToken);
      }

      @Override
      public SendMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SendMessage) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SendMessage setQuotaUser(java.lang.String quotaUser) {
        return (SendMessage) super.setQuotaUser(quotaUser);
      }

      @Override
      public SendMessage setUserIp(java.lang.String userIp) {
        return (SendMessage) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String message;

      /**

       */
      public java.lang.String getMessage() {
        return message;
      }

      public SendMessage setMessage(java.lang.String message) {
        this.message = message;
        return this;
      }

      @Override
      public SendMessage set(String parameterName, Object value) {
        return (SendMessage) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "getBBCTamilDetail".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetBBCTamilDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param guid
   * @return the request
   */
  public GetBBCTamilDetail getBBCTamilDetail(java.lang.String guid) throws java.io.IOException {
    GetBBCTamilDetail result = new GetBBCTamilDetail(guid);
    initialize(result);
    return result;
  }

  public class GetBBCTamilDetail extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.Feed> {

    private static final String REST_PATH = "bbctamil/detail";

    /**
     * Create a request for the method "getBBCTamilDetail".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetBBCTamilDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetBBCTamilDetail#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param guid
     * @since 1.13
     */
    protected GetBBCTamilDetail(java.lang.String guid) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.Feed.class);
      this.guid = com.google.api.client.util.Preconditions.checkNotNull(guid, "Required parameter guid must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBBCTamilDetail setAlt(java.lang.String alt) {
      return (GetBBCTamilDetail) super.setAlt(alt);
    }

    @Override
    public GetBBCTamilDetail setFields(java.lang.String fields) {
      return (GetBBCTamilDetail) super.setFields(fields);
    }

    @Override
    public GetBBCTamilDetail setKey(java.lang.String key) {
      return (GetBBCTamilDetail) super.setKey(key);
    }

    @Override
    public GetBBCTamilDetail setOauthToken(java.lang.String oauthToken) {
      return (GetBBCTamilDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBBCTamilDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBBCTamilDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBBCTamilDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetBBCTamilDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBBCTamilDetail setUserIp(java.lang.String userIp) {
      return (GetBBCTamilDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String guid;

    /**

     */
    public java.lang.String getGuid() {
      return guid;
    }

    public GetBBCTamilDetail setGuid(java.lang.String guid) {
      this.guid = guid;
      return this;
    }

    @Override
    public GetBBCTamilDetail set(String parameterName, Object value) {
      return (GetBBCTamilDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBBCTamilFeedList".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetBBCTamilFeedList#execute()} method to invoke the remote
   * operation.
   *
   * @param category
   * @return the request
   */
  public GetBBCTamilFeedList getBBCTamilFeedList(java.lang.Integer category) throws java.io.IOException {
    GetBBCTamilFeedList result = new GetBBCTamilFeedList(category);
    initialize(result);
    return result;
  }

  public class GetBBCTamilFeedList extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "bbctamil";

    /**
     * Create a request for the method "getBBCTamilFeedList".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetBBCTamilFeedList#execute()} method to invoke the remote
     * operation. <p> {@link GetBBCTamilFeedList#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param category
     * @since 1.13
     */
    protected GetBBCTamilFeedList(java.lang.Integer category) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
      this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBBCTamilFeedList setAlt(java.lang.String alt) {
      return (GetBBCTamilFeedList) super.setAlt(alt);
    }

    @Override
    public GetBBCTamilFeedList setFields(java.lang.String fields) {
      return (GetBBCTamilFeedList) super.setFields(fields);
    }

    @Override
    public GetBBCTamilFeedList setKey(java.lang.String key) {
      return (GetBBCTamilFeedList) super.setKey(key);
    }

    @Override
    public GetBBCTamilFeedList setOauthToken(java.lang.String oauthToken) {
      return (GetBBCTamilFeedList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBBCTamilFeedList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBBCTamilFeedList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBBCTamilFeedList setQuotaUser(java.lang.String quotaUser) {
      return (GetBBCTamilFeedList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBBCTamilFeedList setUserIp(java.lang.String userIp) {
      return (GetBBCTamilFeedList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer category;

    /**

     */
    public java.lang.Integer getCategory() {
      return category;
    }

    public GetBBCTamilFeedList setCategory(java.lang.Integer category) {
      this.category = category;
      return this;
    }

    @Override
    public GetBBCTamilFeedList set(String parameterName, Object value) {
      return (GetBBCTamilFeedList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBusinessFeeds".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetBusinessFeeds#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetBusinessFeeds getBusinessFeeds() throws java.io.IOException {
    GetBusinessFeeds result = new GetBusinessFeeds();
    initialize(result);
    return result;
  }

  public class GetBusinessFeeds extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "digitalHuntBusiness";

    /**
     * Create a request for the method "getBusinessFeeds".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetBusinessFeeds#execute()} method to invoke the remote
     * operation. <p> {@link GetBusinessFeeds#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetBusinessFeeds() {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBusinessFeeds setAlt(java.lang.String alt) {
      return (GetBusinessFeeds) super.setAlt(alt);
    }

    @Override
    public GetBusinessFeeds setFields(java.lang.String fields) {
      return (GetBusinessFeeds) super.setFields(fields);
    }

    @Override
    public GetBusinessFeeds setKey(java.lang.String key) {
      return (GetBusinessFeeds) super.setKey(key);
    }

    @Override
    public GetBusinessFeeds setOauthToken(java.lang.String oauthToken) {
      return (GetBusinessFeeds) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBusinessFeeds setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBusinessFeeds) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBusinessFeeds setQuotaUser(java.lang.String quotaUser) {
      return (GetBusinessFeeds) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBusinessFeeds setUserIp(java.lang.String userIp) {
      return (GetBusinessFeeds) super.setUserIp(userIp);
    }

    @Override
    public GetBusinessFeeds set(String parameterName, Object value) {
      return (GetBusinessFeeds) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCinemaFeeds".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetCinemaFeeds#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetCinemaFeeds getCinemaFeeds() throws java.io.IOException {
    GetCinemaFeeds result = new GetCinemaFeeds();
    initialize(result);
    return result;
  }

  public class GetCinemaFeeds extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "digitalHuntCinema";

    /**
     * Create a request for the method "getCinemaFeeds".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetCinemaFeeds#execute()} method to invoke the remote
     * operation. <p> {@link GetCinemaFeeds#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetCinemaFeeds() {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCinemaFeeds setAlt(java.lang.String alt) {
      return (GetCinemaFeeds) super.setAlt(alt);
    }

    @Override
    public GetCinemaFeeds setFields(java.lang.String fields) {
      return (GetCinemaFeeds) super.setFields(fields);
    }

    @Override
    public GetCinemaFeeds setKey(java.lang.String key) {
      return (GetCinemaFeeds) super.setKey(key);
    }

    @Override
    public GetCinemaFeeds setOauthToken(java.lang.String oauthToken) {
      return (GetCinemaFeeds) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCinemaFeeds setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCinemaFeeds) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCinemaFeeds setQuotaUser(java.lang.String quotaUser) {
      return (GetCinemaFeeds) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCinemaFeeds setUserIp(java.lang.String userIp) {
      return (GetCinemaFeeds) super.setUserIp(userIp);
    }

    @Override
    public GetCinemaFeeds set(String parameterName, Object value) {
      return (GetCinemaFeeds) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDinakaranDetail".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetDinakaranDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param guid
   * @return the request
   */
  public GetDinakaranDetail getDinakaranDetail(java.lang.String guid) throws java.io.IOException {
    GetDinakaranDetail result = new GetDinakaranDetail(guid);
    initialize(result);
    return result;
  }

  public class GetDinakaranDetail extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.Feed> {

    private static final String REST_PATH = "dinakaran/detail";

    /**
     * Create a request for the method "getDinakaranDetail".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetDinakaranDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetDinakaranDetail#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param guid
     * @since 1.13
     */
    protected GetDinakaranDetail(java.lang.String guid) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.Feed.class);
      this.guid = com.google.api.client.util.Preconditions.checkNotNull(guid, "Required parameter guid must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDinakaranDetail setAlt(java.lang.String alt) {
      return (GetDinakaranDetail) super.setAlt(alt);
    }

    @Override
    public GetDinakaranDetail setFields(java.lang.String fields) {
      return (GetDinakaranDetail) super.setFields(fields);
    }

    @Override
    public GetDinakaranDetail setKey(java.lang.String key) {
      return (GetDinakaranDetail) super.setKey(key);
    }

    @Override
    public GetDinakaranDetail setOauthToken(java.lang.String oauthToken) {
      return (GetDinakaranDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDinakaranDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDinakaranDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDinakaranDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetDinakaranDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDinakaranDetail setUserIp(java.lang.String userIp) {
      return (GetDinakaranDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String guid;

    /**

     */
    public java.lang.String getGuid() {
      return guid;
    }

    public GetDinakaranDetail setGuid(java.lang.String guid) {
      this.guid = guid;
      return this;
    }

    @Override
    public GetDinakaranDetail set(String parameterName, Object value) {
      return (GetDinakaranDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDinakaranFeedList".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetDinakaranFeedList#execute()} method to invoke the remote
   * operation.
   *
   * @param categoryId
   * @return the request
   */
  public GetDinakaranFeedList getDinakaranFeedList(java.lang.Integer categoryId) throws java.io.IOException {
    GetDinakaranFeedList result = new GetDinakaranFeedList(categoryId);
    initialize(result);
    return result;
  }

  public class GetDinakaranFeedList extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "dinakaran";

    /**
     * Create a request for the method "getDinakaranFeedList".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetDinakaranFeedList#execute()} method to invoke the
     * remote operation. <p> {@link GetDinakaranFeedList#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param categoryId
     * @since 1.13
     */
    protected GetDinakaranFeedList(java.lang.Integer categoryId) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
      this.categoryId = com.google.api.client.util.Preconditions.checkNotNull(categoryId, "Required parameter categoryId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDinakaranFeedList setAlt(java.lang.String alt) {
      return (GetDinakaranFeedList) super.setAlt(alt);
    }

    @Override
    public GetDinakaranFeedList setFields(java.lang.String fields) {
      return (GetDinakaranFeedList) super.setFields(fields);
    }

    @Override
    public GetDinakaranFeedList setKey(java.lang.String key) {
      return (GetDinakaranFeedList) super.setKey(key);
    }

    @Override
    public GetDinakaranFeedList setOauthToken(java.lang.String oauthToken) {
      return (GetDinakaranFeedList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDinakaranFeedList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDinakaranFeedList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDinakaranFeedList setQuotaUser(java.lang.String quotaUser) {
      return (GetDinakaranFeedList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDinakaranFeedList setUserIp(java.lang.String userIp) {
      return (GetDinakaranFeedList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer categoryId;

    /**

     */
    public java.lang.Integer getCategoryId() {
      return categoryId;
    }

    public GetDinakaranFeedList setCategoryId(java.lang.Integer categoryId) {
      this.categoryId = categoryId;
      return this;
    }

    @Override
    public GetDinakaranFeedList set(String parameterName, Object value) {
      return (GetDinakaranFeedList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDinamalarDetail".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetDinamalarDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param category
   * @param guid
   * @param source
   * @return the request
   */
  public GetDinamalarDetail getDinamalarDetail(java.lang.Integer category, java.lang.String guid, java.lang.Integer source) throws java.io.IOException {
    GetDinamalarDetail result = new GetDinamalarDetail(category, guid, source);
    initialize(result);
    return result;
  }

  public class GetDinamalarDetail extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.Feed> {

    private static final String REST_PATH = "dinamalar/detail";

    /**
     * Create a request for the method "getDinamalarDetail".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetDinamalarDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetDinamalarDetail#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param category
     * @param guid
     * @param source
     * @since 1.13
     */
    protected GetDinamalarDetail(java.lang.Integer category, java.lang.String guid, java.lang.Integer source) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.Feed.class);
      this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
      this.guid = com.google.api.client.util.Preconditions.checkNotNull(guid, "Required parameter guid must be specified.");
      this.source = com.google.api.client.util.Preconditions.checkNotNull(source, "Required parameter source must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDinamalarDetail setAlt(java.lang.String alt) {
      return (GetDinamalarDetail) super.setAlt(alt);
    }

    @Override
    public GetDinamalarDetail setFields(java.lang.String fields) {
      return (GetDinamalarDetail) super.setFields(fields);
    }

    @Override
    public GetDinamalarDetail setKey(java.lang.String key) {
      return (GetDinamalarDetail) super.setKey(key);
    }

    @Override
    public GetDinamalarDetail setOauthToken(java.lang.String oauthToken) {
      return (GetDinamalarDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDinamalarDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDinamalarDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDinamalarDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetDinamalarDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDinamalarDetail setUserIp(java.lang.String userIp) {
      return (GetDinamalarDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer category;

    /**

     */
    public java.lang.Integer getCategory() {
      return category;
    }

    public GetDinamalarDetail setCategory(java.lang.Integer category) {
      this.category = category;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String guid;

    /**

     */
    public java.lang.String getGuid() {
      return guid;
    }

    public GetDinamalarDetail setGuid(java.lang.String guid) {
      this.guid = guid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer source;

    /**

     */
    public java.lang.Integer getSource() {
      return source;
    }

    public GetDinamalarDetail setSource(java.lang.Integer source) {
      this.source = source;
      return this;
    }

    @Override
    public GetDinamalarDetail set(String parameterName, Object value) {
      return (GetDinamalarDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDinamalarFeedList".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetDinamalarFeedList#execute()} method to invoke the remote
   * operation.
   *
   * @param category
   * @return the request
   */
  public GetDinamalarFeedList getDinamalarFeedList(java.lang.Integer category) throws java.io.IOException {
    GetDinamalarFeedList result = new GetDinamalarFeedList(category);
    initialize(result);
    return result;
  }

  public class GetDinamalarFeedList extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "dinamalar";

    /**
     * Create a request for the method "getDinamalarFeedList".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetDinamalarFeedList#execute()} method to invoke the
     * remote operation. <p> {@link GetDinamalarFeedList#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param category
     * @since 1.13
     */
    protected GetDinamalarFeedList(java.lang.Integer category) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
      this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDinamalarFeedList setAlt(java.lang.String alt) {
      return (GetDinamalarFeedList) super.setAlt(alt);
    }

    @Override
    public GetDinamalarFeedList setFields(java.lang.String fields) {
      return (GetDinamalarFeedList) super.setFields(fields);
    }

    @Override
    public GetDinamalarFeedList setKey(java.lang.String key) {
      return (GetDinamalarFeedList) super.setKey(key);
    }

    @Override
    public GetDinamalarFeedList setOauthToken(java.lang.String oauthToken) {
      return (GetDinamalarFeedList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDinamalarFeedList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDinamalarFeedList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDinamalarFeedList setQuotaUser(java.lang.String quotaUser) {
      return (GetDinamalarFeedList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDinamalarFeedList setUserIp(java.lang.String userIp) {
      return (GetDinamalarFeedList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer category;

    /**

     */
    public java.lang.Integer getCategory() {
      return category;
    }

    public GetDinamalarFeedList setCategory(java.lang.Integer category) {
      this.category = category;
      return this;
    }

    @Override
    public GetDinamalarFeedList set(String parameterName, Object value) {
      return (GetDinamalarFeedList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDinamaniDetail".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetDinamaniDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param guid
   * @return the request
   */
  public GetDinamaniDetail getDinamaniDetail(java.lang.String guid) throws java.io.IOException {
    GetDinamaniDetail result = new GetDinamaniDetail(guid);
    initialize(result);
    return result;
  }

  public class GetDinamaniDetail extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.Feed> {

    private static final String REST_PATH = "dinamani/detail";

    /**
     * Create a request for the method "getDinamaniDetail".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetDinamaniDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetDinamaniDetail#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param guid
     * @since 1.13
     */
    protected GetDinamaniDetail(java.lang.String guid) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.Feed.class);
      this.guid = com.google.api.client.util.Preconditions.checkNotNull(guid, "Required parameter guid must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDinamaniDetail setAlt(java.lang.String alt) {
      return (GetDinamaniDetail) super.setAlt(alt);
    }

    @Override
    public GetDinamaniDetail setFields(java.lang.String fields) {
      return (GetDinamaniDetail) super.setFields(fields);
    }

    @Override
    public GetDinamaniDetail setKey(java.lang.String key) {
      return (GetDinamaniDetail) super.setKey(key);
    }

    @Override
    public GetDinamaniDetail setOauthToken(java.lang.String oauthToken) {
      return (GetDinamaniDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDinamaniDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDinamaniDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDinamaniDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetDinamaniDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDinamaniDetail setUserIp(java.lang.String userIp) {
      return (GetDinamaniDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String guid;

    /**

     */
    public java.lang.String getGuid() {
      return guid;
    }

    public GetDinamaniDetail setGuid(java.lang.String guid) {
      this.guid = guid;
      return this;
    }

    @Override
    public GetDinamaniDetail set(String parameterName, Object value) {
      return (GetDinamaniDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDinamaniFeeds".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetDinamaniFeeds#execute()} method to invoke the remote
   * operation.
   *
   * @param category
   * @return the request
   */
  public GetDinamaniFeeds getDinamaniFeeds(java.lang.Integer category) throws java.io.IOException {
    GetDinamaniFeeds result = new GetDinamaniFeeds(category);
    initialize(result);
    return result;
  }

  public class GetDinamaniFeeds extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "dinamani";

    /**
     * Create a request for the method "getDinamaniFeeds".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetDinamaniFeeds#execute()} method to invoke the remote
     * operation. <p> {@link GetDinamaniFeeds#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param category
     * @since 1.13
     */
    protected GetDinamaniFeeds(java.lang.Integer category) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
      this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDinamaniFeeds setAlt(java.lang.String alt) {
      return (GetDinamaniFeeds) super.setAlt(alt);
    }

    @Override
    public GetDinamaniFeeds setFields(java.lang.String fields) {
      return (GetDinamaniFeeds) super.setFields(fields);
    }

    @Override
    public GetDinamaniFeeds setKey(java.lang.String key) {
      return (GetDinamaniFeeds) super.setKey(key);
    }

    @Override
    public GetDinamaniFeeds setOauthToken(java.lang.String oauthToken) {
      return (GetDinamaniFeeds) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDinamaniFeeds setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDinamaniFeeds) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDinamaniFeeds setQuotaUser(java.lang.String quotaUser) {
      return (GetDinamaniFeeds) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDinamaniFeeds setUserIp(java.lang.String userIp) {
      return (GetDinamaniFeeds) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer category;

    /**

     */
    public java.lang.Integer getCategory() {
      return category;
    }

    public GetDinamaniFeeds setCategory(java.lang.Integer category) {
      this.category = category;
      return this;
    }

    @Override
    public GetDinamaniFeeds set(String parameterName, Object value) {
      return (GetDinamaniFeeds) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getHeadLines".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetHeadLines#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetHeadLines getHeadLines() throws java.io.IOException {
    GetHeadLines result = new GetHeadLines();
    initialize(result);
    return result;
  }

  public class GetHeadLines extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "digitalHuntHeadLines";

    /**
     * Create a request for the method "getHeadLines".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetHeadLines#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetHeadLines#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetHeadLines() {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetHeadLines setAlt(java.lang.String alt) {
      return (GetHeadLines) super.setAlt(alt);
    }

    @Override
    public GetHeadLines setFields(java.lang.String fields) {
      return (GetHeadLines) super.setFields(fields);
    }

    @Override
    public GetHeadLines setKey(java.lang.String key) {
      return (GetHeadLines) super.setKey(key);
    }

    @Override
    public GetHeadLines setOauthToken(java.lang.String oauthToken) {
      return (GetHeadLines) super.setOauthToken(oauthToken);
    }

    @Override
    public GetHeadLines setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetHeadLines) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetHeadLines setQuotaUser(java.lang.String quotaUser) {
      return (GetHeadLines) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetHeadLines setUserIp(java.lang.String userIp) {
      return (GetHeadLines) super.setUserIp(userIp);
    }

    @Override
    public GetHeadLines set(String parameterName, Object value) {
      return (GetHeadLines) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getIndiaFeeds".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetIndiaFeeds#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetIndiaFeeds getIndiaFeeds() throws java.io.IOException {
    GetIndiaFeeds result = new GetIndiaFeeds();
    initialize(result);
    return result;
  }

  public class GetIndiaFeeds extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "digitalHuntIndia";

    /**
     * Create a request for the method "getIndiaFeeds".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetIndiaFeeds#execute()} method to invoke the remote
     * operation. <p> {@link GetIndiaFeeds#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetIndiaFeeds() {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetIndiaFeeds setAlt(java.lang.String alt) {
      return (GetIndiaFeeds) super.setAlt(alt);
    }

    @Override
    public GetIndiaFeeds setFields(java.lang.String fields) {
      return (GetIndiaFeeds) super.setFields(fields);
    }

    @Override
    public GetIndiaFeeds setKey(java.lang.String key) {
      return (GetIndiaFeeds) super.setKey(key);
    }

    @Override
    public GetIndiaFeeds setOauthToken(java.lang.String oauthToken) {
      return (GetIndiaFeeds) super.setOauthToken(oauthToken);
    }

    @Override
    public GetIndiaFeeds setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetIndiaFeeds) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetIndiaFeeds setQuotaUser(java.lang.String quotaUser) {
      return (GetIndiaFeeds) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetIndiaFeeds setUserIp(java.lang.String userIp) {
      return (GetIndiaFeeds) super.setUserIp(userIp);
    }

    @Override
    public GetIndiaFeeds set(String parameterName, Object value) {
      return (GetIndiaFeeds) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNakkheeranDetail".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetNakkheeranDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param guid
   * @return the request
   */
  public GetNakkheeranDetail getNakkheeranDetail(java.lang.String guid) throws java.io.IOException {
    GetNakkheeranDetail result = new GetNakkheeranDetail(guid);
    initialize(result);
    return result;
  }

  public class GetNakkheeranDetail extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.Feed> {

    private static final String REST_PATH = "nakkheeran/detail";

    /**
     * Create a request for the method "getNakkheeranDetail".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetNakkheeranDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetNakkheeranDetail#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param guid
     * @since 1.13
     */
    protected GetNakkheeranDetail(java.lang.String guid) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.Feed.class);
      this.guid = com.google.api.client.util.Preconditions.checkNotNull(guid, "Required parameter guid must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNakkheeranDetail setAlt(java.lang.String alt) {
      return (GetNakkheeranDetail) super.setAlt(alt);
    }

    @Override
    public GetNakkheeranDetail setFields(java.lang.String fields) {
      return (GetNakkheeranDetail) super.setFields(fields);
    }

    @Override
    public GetNakkheeranDetail setKey(java.lang.String key) {
      return (GetNakkheeranDetail) super.setKey(key);
    }

    @Override
    public GetNakkheeranDetail setOauthToken(java.lang.String oauthToken) {
      return (GetNakkheeranDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNakkheeranDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetNakkheeranDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNakkheeranDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetNakkheeranDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNakkheeranDetail setUserIp(java.lang.String userIp) {
      return (GetNakkheeranDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String guid;

    /**

     */
    public java.lang.String getGuid() {
      return guid;
    }

    public GetNakkheeranDetail setGuid(java.lang.String guid) {
      this.guid = guid;
      return this;
    }

    @Override
    public GetNakkheeranDetail set(String parameterName, Object value) {
      return (GetNakkheeranDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNakkheeranFeedList".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetNakkheeranFeedList#execute()} method to invoke the remote
   * operation.
   *
   * @param category
   * @return the request
   */
  public GetNakkheeranFeedList getNakkheeranFeedList(java.lang.Integer category) throws java.io.IOException {
    GetNakkheeranFeedList result = new GetNakkheeranFeedList(category);
    initialize(result);
    return result;
  }

  public class GetNakkheeranFeedList extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "nakkheeran";

    /**
     * Create a request for the method "getNakkheeranFeedList".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetNakkheeranFeedList#execute()} method to invoke the
     * remote operation. <p> {@link GetNakkheeranFeedList#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param category
     * @since 1.13
     */
    protected GetNakkheeranFeedList(java.lang.Integer category) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
      this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNakkheeranFeedList setAlt(java.lang.String alt) {
      return (GetNakkheeranFeedList) super.setAlt(alt);
    }

    @Override
    public GetNakkheeranFeedList setFields(java.lang.String fields) {
      return (GetNakkheeranFeedList) super.setFields(fields);
    }

    @Override
    public GetNakkheeranFeedList setKey(java.lang.String key) {
      return (GetNakkheeranFeedList) super.setKey(key);
    }

    @Override
    public GetNakkheeranFeedList setOauthToken(java.lang.String oauthToken) {
      return (GetNakkheeranFeedList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNakkheeranFeedList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetNakkheeranFeedList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNakkheeranFeedList setQuotaUser(java.lang.String quotaUser) {
      return (GetNakkheeranFeedList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNakkheeranFeedList setUserIp(java.lang.String userIp) {
      return (GetNakkheeranFeedList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer category;

    /**

     */
    public java.lang.Integer getCategory() {
      return category;
    }

    public GetNakkheeranFeedList setCategory(java.lang.Integer category) {
      this.category = category;
      return this;
    }

    @Override
    public GetNakkheeranFeedList set(String parameterName, Object value) {
      return (GetNakkheeranFeedList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNewsDetail".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetNewsDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param category
   * @param guid
   * @param source
   * @return the request
   */
  public GetNewsDetail getNewsDetail(java.lang.Integer category, java.lang.String guid, java.lang.Integer source) throws java.io.IOException {
    GetNewsDetail result = new GetNewsDetail(category, guid, source);
    initialize(result);
    return result;
  }

  public class GetNewsDetail extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.Feed> {

    private static final String REST_PATH = "digitalHunt";

    /**
     * Create a request for the method "getNewsDetail".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetNewsDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetNewsDetail#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param category
     * @param guid
     * @param source
     * @since 1.13
     */
    protected GetNewsDetail(java.lang.Integer category, java.lang.String guid, java.lang.Integer source) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.Feed.class);
      this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
      this.guid = com.google.api.client.util.Preconditions.checkNotNull(guid, "Required parameter guid must be specified.");
      this.source = com.google.api.client.util.Preconditions.checkNotNull(source, "Required parameter source must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNewsDetail setAlt(java.lang.String alt) {
      return (GetNewsDetail) super.setAlt(alt);
    }

    @Override
    public GetNewsDetail setFields(java.lang.String fields) {
      return (GetNewsDetail) super.setFields(fields);
    }

    @Override
    public GetNewsDetail setKey(java.lang.String key) {
      return (GetNewsDetail) super.setKey(key);
    }

    @Override
    public GetNewsDetail setOauthToken(java.lang.String oauthToken) {
      return (GetNewsDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNewsDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetNewsDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNewsDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetNewsDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNewsDetail setUserIp(java.lang.String userIp) {
      return (GetNewsDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer category;

    /**

     */
    public java.lang.Integer getCategory() {
      return category;
    }

    public GetNewsDetail setCategory(java.lang.Integer category) {
      this.category = category;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String guid;

    /**

     */
    public java.lang.String getGuid() {
      return guid;
    }

    public GetNewsDetail setGuid(java.lang.String guid) {
      this.guid = guid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer source;

    /**

     */
    public java.lang.Integer getSource() {
      return source;
    }

    public GetNewsDetail setSource(java.lang.Integer source) {
      this.source = source;
      return this;
    }

    @Override
    public GetNewsDetail set(String parameterName, Object value) {
      return (GetNewsDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOneIndiaDetail".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetOneIndiaDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param guid
   * @return the request
   */
  public GetOneIndiaDetail getOneIndiaDetail(java.lang.String guid) throws java.io.IOException {
    GetOneIndiaDetail result = new GetOneIndiaDetail(guid);
    initialize(result);
    return result;
  }

  public class GetOneIndiaDetail extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.Feed> {

    private static final String REST_PATH = "oneindia/detail";

    /**
     * Create a request for the method "getOneIndiaDetail".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetOneIndiaDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetOneIndiaDetail#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param guid
     * @since 1.13
     */
    protected GetOneIndiaDetail(java.lang.String guid) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.Feed.class);
      this.guid = com.google.api.client.util.Preconditions.checkNotNull(guid, "Required parameter guid must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOneIndiaDetail setAlt(java.lang.String alt) {
      return (GetOneIndiaDetail) super.setAlt(alt);
    }

    @Override
    public GetOneIndiaDetail setFields(java.lang.String fields) {
      return (GetOneIndiaDetail) super.setFields(fields);
    }

    @Override
    public GetOneIndiaDetail setKey(java.lang.String key) {
      return (GetOneIndiaDetail) super.setKey(key);
    }

    @Override
    public GetOneIndiaDetail setOauthToken(java.lang.String oauthToken) {
      return (GetOneIndiaDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOneIndiaDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOneIndiaDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOneIndiaDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetOneIndiaDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOneIndiaDetail setUserIp(java.lang.String userIp) {
      return (GetOneIndiaDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String guid;

    /**

     */
    public java.lang.String getGuid() {
      return guid;
    }

    public GetOneIndiaDetail setGuid(java.lang.String guid) {
      this.guid = guid;
      return this;
    }

    @Override
    public GetOneIndiaDetail set(String parameterName, Object value) {
      return (GetOneIndiaDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOneIndiaFeedList".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetOneIndiaFeedList#execute()} method to invoke the remote
   * operation.
   *
   * @param category
   * @return the request
   */
  public GetOneIndiaFeedList getOneIndiaFeedList(java.lang.Integer category) throws java.io.IOException {
    GetOneIndiaFeedList result = new GetOneIndiaFeedList(category);
    initialize(result);
    return result;
  }

  public class GetOneIndiaFeedList extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "oneindia";

    /**
     * Create a request for the method "getOneIndiaFeedList".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetOneIndiaFeedList#execute()} method to invoke the remote
     * operation. <p> {@link GetOneIndiaFeedList#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param category
     * @since 1.13
     */
    protected GetOneIndiaFeedList(java.lang.Integer category) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
      this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOneIndiaFeedList setAlt(java.lang.String alt) {
      return (GetOneIndiaFeedList) super.setAlt(alt);
    }

    @Override
    public GetOneIndiaFeedList setFields(java.lang.String fields) {
      return (GetOneIndiaFeedList) super.setFields(fields);
    }

    @Override
    public GetOneIndiaFeedList setKey(java.lang.String key) {
      return (GetOneIndiaFeedList) super.setKey(key);
    }

    @Override
    public GetOneIndiaFeedList setOauthToken(java.lang.String oauthToken) {
      return (GetOneIndiaFeedList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOneIndiaFeedList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOneIndiaFeedList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOneIndiaFeedList setQuotaUser(java.lang.String quotaUser) {
      return (GetOneIndiaFeedList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOneIndiaFeedList setUserIp(java.lang.String userIp) {
      return (GetOneIndiaFeedList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer category;

    /**

     */
    public java.lang.Integer getCategory() {
      return category;
    }

    public GetOneIndiaFeedList setCategory(java.lang.Integer category) {
      this.category = category;
      return this;
    }

    @Override
    public GetOneIndiaFeedList set(String parameterName, Object value) {
      return (GetOneIndiaFeedList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getSportsFeeds".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetSportsFeeds#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetSportsFeeds getSportsFeeds() throws java.io.IOException {
    GetSportsFeeds result = new GetSportsFeeds();
    initialize(result);
    return result;
  }

  public class GetSportsFeeds extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "digitalHuntSports";

    /**
     * Create a request for the method "getSportsFeeds".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetSportsFeeds#execute()} method to invoke the remote
     * operation. <p> {@link GetSportsFeeds#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetSportsFeeds() {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSportsFeeds setAlt(java.lang.String alt) {
      return (GetSportsFeeds) super.setAlt(alt);
    }

    @Override
    public GetSportsFeeds setFields(java.lang.String fields) {
      return (GetSportsFeeds) super.setFields(fields);
    }

    @Override
    public GetSportsFeeds setKey(java.lang.String key) {
      return (GetSportsFeeds) super.setKey(key);
    }

    @Override
    public GetSportsFeeds setOauthToken(java.lang.String oauthToken) {
      return (GetSportsFeeds) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSportsFeeds setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSportsFeeds) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSportsFeeds setQuotaUser(java.lang.String quotaUser) {
      return (GetSportsFeeds) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSportsFeeds setUserIp(java.lang.String userIp) {
      return (GetSportsFeeds) super.setUserIp(userIp);
    }

    @Override
    public GetSportsFeeds set(String parameterName, Object value) {
      return (GetSportsFeeds) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTamilNadu".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetTamilNadu#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetTamilNadu getTamilNadu() throws java.io.IOException {
    GetTamilNadu result = new GetTamilNadu();
    initialize(result);
    return result;
  }

  public class GetTamilNadu extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "digitalHuntTamilNadu";

    /**
     * Create a request for the method "getTamilNadu".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetTamilNadu#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetTamilNadu#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetTamilNadu() {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTamilNadu setAlt(java.lang.String alt) {
      return (GetTamilNadu) super.setAlt(alt);
    }

    @Override
    public GetTamilNadu setFields(java.lang.String fields) {
      return (GetTamilNadu) super.setFields(fields);
    }

    @Override
    public GetTamilNadu setKey(java.lang.String key) {
      return (GetTamilNadu) super.setKey(key);
    }

    @Override
    public GetTamilNadu setOauthToken(java.lang.String oauthToken) {
      return (GetTamilNadu) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTamilNadu setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTamilNadu) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTamilNadu setQuotaUser(java.lang.String quotaUser) {
      return (GetTamilNadu) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTamilNadu setUserIp(java.lang.String userIp) {
      return (GetTamilNadu) super.setUserIp(userIp);
    }

    @Override
    public GetTamilNadu set(String parameterName, Object value) {
      return (GetTamilNadu) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getWorldFeeds".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link GetWorldFeeds#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetWorldFeeds getWorldFeeds() throws java.io.IOException {
    GetWorldFeeds result = new GetWorldFeeds();
    initialize(result);
    return result;
  }

  public class GetWorldFeeds extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.FeedCollection> {

    private static final String REST_PATH = "digitalHuntWorld";

    /**
     * Create a request for the method "getWorldFeeds".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link GetWorldFeeds#execute()} method to invoke the remote
     * operation. <p> {@link GetWorldFeeds#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetWorldFeeds() {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.FeedCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetWorldFeeds setAlt(java.lang.String alt) {
      return (GetWorldFeeds) super.setAlt(alt);
    }

    @Override
    public GetWorldFeeds setFields(java.lang.String fields) {
      return (GetWorldFeeds) super.setFields(fields);
    }

    @Override
    public GetWorldFeeds setKey(java.lang.String key) {
      return (GetWorldFeeds) super.setKey(key);
    }

    @Override
    public GetWorldFeeds setOauthToken(java.lang.String oauthToken) {
      return (GetWorldFeeds) super.setOauthToken(oauthToken);
    }

    @Override
    public GetWorldFeeds setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetWorldFeeds) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetWorldFeeds setQuotaUser(java.lang.String quotaUser) {
      return (GetWorldFeeds) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetWorldFeeds setUserIp(java.lang.String userIp) {
      return (GetWorldFeeds) super.setUserIp(userIp);
    }

    @Override
    public GetWorldFeeds set(String parameterName, Object value) {
      return (GetWorldFeeds) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDevices".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link ListDevices#execute()} method to invoke the remote
   * operation.
   *
   * @param count
   * @return the request
   */
  public ListDevices listDevices(java.lang.Integer count) throws java.io.IOException {
    ListDevices result = new ListDevices(count);
    initialize(result);
    return result;
  }

  public class ListDevices extends ChennaiTimesApiRequest<com.viginfotech.chennaiTimesApi.model.CollectionResponseRegistrationRecord> {

    private static final String REST_PATH = "registrationrecord/{count}";

    /**
     * Create a request for the method "listDevices".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link ListDevices#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListDevices#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param count
     * @since 1.13
     */
    protected ListDevices(java.lang.Integer count) {
      super(ChennaiTimesApi.this, "GET", REST_PATH, null, com.viginfotech.chennaiTimesApi.model.CollectionResponseRegistrationRecord.class);
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDevices setAlt(java.lang.String alt) {
      return (ListDevices) super.setAlt(alt);
    }

    @Override
    public ListDevices setFields(java.lang.String fields) {
      return (ListDevices) super.setFields(fields);
    }

    @Override
    public ListDevices setKey(java.lang.String key) {
      return (ListDevices) super.setKey(key);
    }

    @Override
    public ListDevices setOauthToken(java.lang.String oauthToken) {
      return (ListDevices) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDevices setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDevices) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDevices setQuotaUser(java.lang.String quotaUser) {
      return (ListDevices) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDevices setUserIp(java.lang.String userIp) {
      return (ListDevices) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListDevices setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @Override
    public ListDevices set(String parameterName, Object value) {
      return (ListDevices) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param regId
   * @return the request
   */
  public Register register(java.lang.String regId) throws java.io.IOException {
    Register result = new Register(regId);
    initialize(result);
    return result;
  }

  public class Register extends ChennaiTimesApiRequest<Void> {

    private static final String REST_PATH = "registerDevice/{regId}";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
     * <p> {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param regId
     * @since 1.13
     */
    protected Register(java.lang.String regId) {
      super(ChennaiTimesApi.this, "POST", REST_PATH, null, Void.class);
      this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String regId;

    /**

     */
    public java.lang.String getRegId() {
      return regId;
    }

    public Register setRegId(java.lang.String regId) {
      this.regId = regId;
      return this;
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "unregister".
   *
   * This request holds the parameters needed by the chennaiTimesApi server.  After setting any
   * optional parameters, call the {@link Unregister#execute()} method to invoke the remote operation.
   *
   * @param regId
   * @return the request
   */
  public Unregister unregister(java.lang.String regId) throws java.io.IOException {
    Unregister result = new Unregister(regId);
    initialize(result);
    return result;
  }

  public class Unregister extends ChennaiTimesApiRequest<Void> {

    private static final String REST_PATH = "unregisterDevice/{regId}";

    /**
     * Create a request for the method "unregister".
     *
     * This request holds the parameters needed by the the chennaiTimesApi server.  After setting any
     * optional parameters, call the {@link Unregister#execute()} method to invoke the remote
     * operation. <p> {@link
     * Unregister#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param regId
     * @since 1.13
     */
    protected Unregister(java.lang.String regId) {
      super(ChennaiTimesApi.this, "POST", REST_PATH, null, Void.class);
      this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
    }

    @Override
    public Unregister setAlt(java.lang.String alt) {
      return (Unregister) super.setAlt(alt);
    }

    @Override
    public Unregister setFields(java.lang.String fields) {
      return (Unregister) super.setFields(fields);
    }

    @Override
    public Unregister setKey(java.lang.String key) {
      return (Unregister) super.setKey(key);
    }

    @Override
    public Unregister setOauthToken(java.lang.String oauthToken) {
      return (Unregister) super.setOauthToken(oauthToken);
    }

    @Override
    public Unregister setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Unregister) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Unregister setQuotaUser(java.lang.String quotaUser) {
      return (Unregister) super.setQuotaUser(quotaUser);
    }

    @Override
    public Unregister setUserIp(java.lang.String userIp) {
      return (Unregister) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String regId;

    /**

     */
    public java.lang.String getRegId() {
      return regId;
    }

    public Unregister setRegId(java.lang.String regId) {
      this.regId = regId;
      return this;
    }

    @Override
    public Unregister set(String parameterName, Object value) {
      return (Unregister) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ChennaiTimesApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ChennaiTimesApi}. */
    @Override
    public ChennaiTimesApi build() {
      return new ChennaiTimesApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ChennaiTimesApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setChennaiTimesApiRequestInitializer(
        ChennaiTimesApiRequestInitializer chennaitimesapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(chennaitimesapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
